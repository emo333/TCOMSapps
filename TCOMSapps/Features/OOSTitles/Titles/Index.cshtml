@model TCOMSapps.Features.OOSTitles.Titles.TitleViewModel

@{
    ViewBag.Title = "Index";
}
<br />
<h2>TITLES [for testing]</h2>

<table class="table table-dark">
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["CustFNameSortParm"]">@Html.DisplayNameFor(model => model.Title.CustFName)</a>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title.CustLName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title.Vin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title.TitleState)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title.VehYr)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title.VehMake)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title.VehModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title.RecDt)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model.PaginatedTitles)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CustFName)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustLName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vin)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TitleState)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehYr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehMake)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehModel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RecDt)
            </td>

            <td>
                <div>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "" })
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "" })
                </div>
            </td>
        </tr>
    }

</table>
@{
    var prevDisabled = !Model.PaginatedTitles.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PaginatedTitles.HasNextPage ? "disabled" : "";

}
<hr />
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PaginatedTitles.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-info btn-outline-light @prevDisabled">
    Previous
</a>

@for (int i = 1; i <= int.Parse(ViewData["Pages"].ToString()); i++)
{
    var curpgDisabled = (Model.PaginatedTitles.PageIndex == i) ? "disabled" : "";
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@i"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-info btn-outline-light @curpgDisabled">
        @i
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PaginatedTitles.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-info btn-outline-light @nextDisabled">
    Next
</a>

@ViewData[""]